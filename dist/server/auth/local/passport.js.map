{"version":3,"sources":["../../../../server/auth/local/passport.js"],"names":[],"mappings":";;;;;QA2BgB,K,GAAA,K;;AA3BhB;;;;AACA;;;;AAEA,SAAS,iBAAT,CAA2B,IAA3B,EAAiC,KAAjC,EAAwC,QAAxC,EAAkD,IAAlD,EAAwD;AACtD,OAAK,OAAL,CAAa;AACX,WAAO,MAAM,WAAN;AADI,GAAb,EAEG,IAFH,GAGG,IAHH,CAGQ,gBAAQ;AACZ,QAAI,CAAC,IAAL,EAAW;AACT,aAAO,KAAK,IAAL,EAAW,KAAX,EAAkB;AACvB,iBAAS;AADc,OAAlB,CAAP;AAGD;AACD,SAAK,YAAL,CAAkB,QAAlB,EAA4B,UAAS,SAAT,EAAoB,aAApB,EAAmC;AAC7D,UAAI,SAAJ,EAAe;AACb,eAAO,KAAK,SAAL,CAAP;AACD;AACD,UAAI,CAAC,aAAL,EAAoB;AAClB,eAAO,KAAK,IAAL,EAAW,KAAX,EAAkB,EAAE,SAAS,+BAAX,EAAlB,CAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAK,IAAL,EAAW,IAAX,CAAP;AACD;AACF,KATD;AAUD,GAnBH,EAoBG,KApBH,CAoBS;AAAA,WAAO,KAAK,GAAL,CAAP;AAAA,GApBT;AAqBD;;AAEM,SAAS,KAAT,CAAe,IAAf,EAAqB,MAArB,EAA6B;AAClC,qBAAS,GAAT,CAAa,4BAAkB;AAC7B,mBAAe,OADc;AAE7B,mBAAe,U;AAFc,GAAlB,EAGV,UAAS,KAAT,EAAgB,QAAhB,EAA0B,IAA1B,EAAgC;AACjC,WAAO,kBAAkB,IAAlB,EAAwB,KAAxB,EAA+B,QAA/B,EAAyC,IAAzC,CAAP;AACD,GALY,CAAb;AAMD","file":"passport.js","sourcesContent":["import passport from 'passport';\nimport {Strategy as LocalStrategy} from 'passport-local';\n\nfunction localAuthenticate(User, email, password, done) {\n  User.findOne({\n    email: email.toLowerCase()\n  }).exec()\n    .then(user => {\n      if (!user) {\n        return done(null, false, {\n          message: 'This email is not registered.'\n        });\n      }\n      user.authenticate(password, function(authError, authenticated) {\n        if (authError) {\n          return done(authError);\n        }\n        if (!authenticated) {\n          return done(null, false, { message: 'This password is not correct.' });\n        } else {\n          return done(null, user);\n        }\n      });\n    })\n    .catch(err => done(err));\n}\n\nexport function setup(User, config) {\n  passport.use(new LocalStrategy({\n    usernameField: 'email',\n    passwordField: 'password' // this is the virtual field on the model\n  }, function(email, password, done) {\n    return localAuthenticate(User, email, password, done);\n  }));\n}\n"]}