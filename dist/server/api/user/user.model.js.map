{"version":3,"sources":["../../../../server/api/user/user.model.js"],"names":[],"mappings":"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","file":"user.model.js","sourcesContent":["'use strict';\n\nimport crypto from 'crypto';\nimport mongoose from 'mongoose';\nmongoose.Promise = require('bluebird');\nimport {Schema} from 'mongoose';\n\nconst authTypes = ['github', 'twitter', 'facebook', 'google'];\n\nvar UserSchema = new Schema({\n  name: String,\n  email: {\n    type: String,\n    lowercase: true,\n    required: function() {\n      if (authTypes.indexOf(this.provider) === -1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  },\n  role: {\n    type: String,\n    default: 'user'\n  },\n  password: {\n    type: String,\n    required: function() {\n      if (authTypes.indexOf(this.provider) === -1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  },\n  provider: String,\n  salt: String,\n  facebook: {},\n  twitter: {},\n  google: {},\n  github: {}\n});\n\n/**\n * Virtuals\n */\n\n// Public profile information\nUserSchema\n  .virtual('profile')\n  .get(function() {\n    return {\n      'name': this.name,\n      'role': this.role\n    };\n  });\n\n// Non-sensitive info we'll be putting in the token\nUserSchema\n  .virtual('token')\n  .get(function() {\n    return {\n      '_id': this._id,\n      'role': this.role\n    };\n  });\n\n/**\n * Validations\n */\n\n// Validate empty email\nUserSchema\n  .path('email')\n  .validate(function(email) {\n    if (authTypes.indexOf(this.provider) !== -1) {\n      return true;\n    }\n    return email.length;\n  }, 'Email cannot be blank');\n\n// Validate empty password\nUserSchema\n  .path('password')\n  .validate(function(password) {\n    if (authTypes.indexOf(this.provider) !== -1) {\n      return true;\n    }\n    return password.length;\n  }, 'Password cannot be blank');\n\n// Validate email is not taken\nUserSchema\n  .path('email')\n  .validate(function(value, respond) {\n    var self = this;\n    if (authTypes.indexOf(this.provider) !== -1) {\n      return respond(true);\n    }\n    return this.constructor.findOne({ email: value }).exec()\n      .then(function(user) {\n        if (user) {\n          if (self.id === user.id) {\n            return respond(true);\n          }\n          return respond(false);\n        }\n        return respond(true);\n      })\n      .catch(function(err) {\n        throw err;\n      });\n  }, 'The specified email address is already in use.');\n\nvar validatePresenceOf = function(value) {\n  return value && value.length;\n};\n\n/**\n * Pre-save hook\n */\nUserSchema\n  .pre('save', function(next) {\n    // Handle new/update passwords\n    if (!this.isModified('password')) {\n      return next();\n    }\n\n    if (!validatePresenceOf(this.password)) {\n      if (authTypes.indexOf(this.provider) === -1) {\n        return next(new Error('Invalid password'));\n      } else {\n        return next();\n      }\n    }\n\n    // Make salt with a callback\n    this.makeSalt((saltErr, salt) => {\n      if (saltErr) {\n        return next(saltErr);\n      }\n      this.salt = salt;\n      this.encryptPassword(this.password, (encryptErr, hashedPassword) => {\n        if (encryptErr) {\n          return next(encryptErr);\n        }\n        this.password = hashedPassword;\n        next();\n      });\n    });\n  });\n\n/**\n * Methods\n */\nUserSchema.methods = {\n  /**\n   * Authenticate - check if the passwords are the same\n   *\n   * @param {String} password\n   * @param {Function} callback\n   * @return {Boolean}\n   * @api public\n   */\n  authenticate(password, callback) {\n    if (!callback) {\n      return this.password === this.encryptPassword(password);\n    }\n\n    this.encryptPassword(password, (err, pwdGen) => {\n      if (err) {\n        return callback(err);\n      }\n\n      if (this.password === pwdGen) {\n        callback(null, true);\n      } else {\n        callback(null, false);\n      }\n    });\n  },\n\n  /**\n   * Make salt\n   *\n   * @param {Number} byteSize Optional salt byte size, default to 16\n   * @param {Function} callback\n   * @return {String}\n   * @api public\n   */\n  makeSalt(byteSize, callback) {\n    var defaultByteSize = 16;\n\n    if (typeof arguments[0] === 'function') {\n      callback = arguments[0];\n      byteSize = defaultByteSize;\n    } else if (typeof arguments[1] === 'function') {\n      callback = arguments[1];\n    }\n\n    if (!byteSize) {\n      byteSize = defaultByteSize;\n    }\n\n    if (!callback) {\n      return crypto.randomBytes(byteSize).toString('base64');\n    }\n\n    return crypto.randomBytes(byteSize, (err, salt) => {\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, salt.toString('base64'));\n      }\n    });\n  },\n\n  /**\n   * Encrypt password\n   *\n   * @param {String} password\n   * @param {Function} callback\n   * @return {String}\n   * @api public\n   */\n  encryptPassword(password, callback) {\n    if (!password || !this.salt) {\n      if (!callback) {\n        return null;\n      } else {\n        return callback('Missing password or salt');\n      }\n    }\n\n    var defaultIterations = 10000;\n    var defaultKeyLength = 64;\n    var salt = new Buffer(this.salt, 'base64');\n\n    if (!callback) {\n      return crypto.pbkdf2Sync(password, salt, defaultIterations, defaultKeyLength)\n                   .toString('base64');\n    }\n\n    return crypto.pbkdf2(password, salt, defaultIterations, defaultKeyLength, (err, key) => {\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, key.toString('base64'));\n      }\n    });\n  }\n};\n\nexport default mongoose.model('User', UserSchema);\n"]}