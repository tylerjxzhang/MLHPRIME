{"version":3,"sources":["../../../../server/api/user/user.integration.js"],"names":[],"mappings":"AAAA;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,SAAS,WAAT,EAAsB,YAAW;AAC/B,MAAI,IAAJ;;;AAGA,SAAO,YAAW;AAChB,WAAO,eAAK,MAAL,GAAc,IAAd,CAAmB,YAAW;AACnC,aAAO,mBAAS;AACd,cAAM,WADQ;AAEd,eAAO,kBAFO;AAGd,kBAAU;AAHI,OAAT,CAAP;;AAMA,aAAO,KAAK,IAAL,EAAP;AACD,KARM,CAAP;AASD,GAVD;;;AAaA,QAAM,YAAW;AACf,WAAO,eAAK,MAAL,EAAP;AACD,GAFD;;AAIA,WAAS,mBAAT,EAA8B,YAAW;AACvC,QAAI,KAAJ;;AAEA,WAAO,UAAS,IAAT,EAAe;AACpB,2CACG,IADH,CACQ,aADR,EAEG,IAFH,CAEQ;AACJ,eAAO,kBADH;AAEJ,kBAAU;AAFN,OAFR,EAMG,MANH,CAMU,GANV,EAOG,MAPH,CAOU,cAPV,EAO0B,MAP1B,EAQG,GARH,CAQO,UAAC,GAAD,EAAM,GAAN,EAAc;AACjB,gBAAQ,IAAI,IAAJ,CAAS,KAAjB;AACA;AACD,OAXH;AAYD,KAbD;;AAeA,OAAG,uDAAH,EAA4D,UAAS,IAAT,EAAe;AACzE,2CACG,GADH,CACO,eADP,EAEG,GAFH,CAEO,eAFP,EAEwB,YAAY,KAFpC,EAGG,MAHH,CAGU,GAHV,EAIG,MAJH,CAIU,cAJV,EAI0B,MAJ1B,EAKG,GALH,CAKO,UAAC,GAAD,EAAM,GAAN,EAAc;AACjB,YAAI,IAAJ,CAAS,GAAT,CAAa,QAAb,GAAwB,MAAxB,CAA+B,KAA/B,CAAqC,KAAK,GAAL,CAAS,QAAT,EAArC;AACA;AACD,OARH;AASD,KAVD;;AAYA,OAAG,kDAAH,EAAuD,UAAS,IAAT,EAAe;AACpE,2CACG,GADH,CACO,eADP,EAEG,MAFH,CAEU,GAFV,EAGG,GAHH,CAGO,IAHP;AAID,KALD;AAMD,GApCD;AAqCD,CA1DD","file":"user.integration.js","sourcesContent":["'use strict';\n\nimport app from '../..';\nimport User from './user.model';\nimport request from 'supertest';\n\ndescribe('User API:', function() {\n  var user;\n\n  // Clear users before testing\n  before(function() {\n    return User.remove().then(function() {\n      user = new User({\n        name: 'Fake User',\n        email: 'test@example.com',\n        password: 'password'\n      });\n\n      return user.save();\n    });\n  });\n\n  // Clear users after testing\n  after(function() {\n    return User.remove();\n  });\n\n  describe('GET /api/users/me', function() {\n    var token;\n\n    before(function(done) {\n      request(app)\n        .post('/auth/local')\n        .send({\n          email: 'test@example.com',\n          password: 'password'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          token = res.body.token;\n          done();\n        });\n    });\n\n    it('should respond with a user profile when authenticated', function(done) {\n      request(app)\n        .get('/api/users/me')\n        .set('authorization', 'Bearer ' + token)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          res.body._id.toString().should.equal(user._id.toString());\n          done();\n        });\n    });\n\n    it('should respond with a 401 when not authenticated', function(done) {\n      request(app)\n        .get('/api/users/me')\n        .expect(401)\n        .end(done);\n    });\n  });\n});\n"]}